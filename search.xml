<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>离散数学</title>
      <link href="/2023/03/02/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
      <url>/2023/03/02/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="离散数学"><a href="#离散数学" class="headerlink" title="离散数学"></a>离散数学</h1><hr><p>@<a href="%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6">TOC</a></p><hr><h1 id="🤡命题"><a href="#🤡命题" class="headerlink" title="🤡命题"></a>🤡命题</h1><h2 id="♿命题概念"><a href="#♿命题概念" class="headerlink" title="♿命题概念"></a>♿命题概念</h2><p><code>具有唯一真值的陈述句</code><br><em><strong>1</strong></em>.感叹句、疑问句、祈使句、命令句都<strong>不是</strong>命题<br><em><strong>2</strong></em>.有歧义的也不是命题  “这句话是假的”<br><em><strong>3</strong></em>.命题<strong>不需要知道真值是多少</strong>，但知道有唯一真值<br>复合命题：命题 + 命题可以进一步分解！</p><h2 id="🐒联结词"><a href="#🐒联结词" class="headerlink" title="🐒联结词"></a>🐒联结词</h2><p><em><strong>1</strong></em>.<br><img src="https://img-blog.csdnimg.cn/cdd3eb4ceb86496f8835993b13210d97.png#pic_center" alt="五种符号"><br>P<code>∧</code>Q: <code>PQ都为真</code>P∧Q则为真，其余皆为假<br>P<code>V</code>Q: <code>PQ都为假</code>P V Q则为假，其余皆为真<br>P<code>&lt;-&gt;</code>Q:  <code>PQ同时为真或PQ同时为假</code>，则P&lt;-&gt;Q为真，其余皆为假<br>P<code>→</code>Q: <code>P为真，Q为假</code>，P→Q则为假，其余皆为真<br><strong>三种情况下变为Q → P：</strong><br><code>①：只有.......才......</code><br><code>②：除非......否则......</code><br><code>③：除非......才......</code><br>PS: 除非他以书面形式或口头形式通知我，否则我不会参加明天的会议。<br>令p: 他书面形式同时我，q: 他口头形式通知我，r: 我参加明天的会议则符号化为 r-&gt;pvq<br>此时的<code>r</code>并不是<code>非r</code>要注意<br><code>运算符优先顺序：（非、∧、V、→、&lt;-&gt;）</code><br><em><strong>2</strong></em>.逆否命题：<code>P→Q</code>  等于  <code>非Q → 非P</code><br><em><strong>3</strong></em>.公式类型：永真式(重言式)、永假式(矛盾式)、可满足式<br><em><strong>4</strong></em>.等价公式：<br><img src="https://img-blog.csdnimg.cn/c4818958f56f481fb4b8e928abd6cd14.png#pic_center" alt="在这里插入图片描述"></p><hr><h2 id="🚾范式"><a href="#🚾范式" class="headerlink" title="🚾范式"></a>🚾范式</h2><p><code>主析取范式 极小项 m 简单合取式的析取 非为0 没有为1 合1</code><br> <code>主合取范式 极大项 M 简单析取式的合取 非为1 没有为0 析0</code><br> <em><strong>如何添加缺少的变元？</strong></em><br> <img src="https://img-blog.csdnimg.cn/cfb25c80281747028554fc6c4ffd4424.png#pic_center" alt="在这里插入图片描述"><br>成真赋值、成假赋值：二进制</p><h2 id="😕推理"><a href="#😕推理" class="headerlink" title="😕推理"></a>😕推理</h2><p><img src="https://img-blog.csdnimg.cn/6619a9fe923448bba47728c2a8972773.png#pic_center" alt="在这里插入图片描述"></p><p>前提引入证明：把结论的前提也当作一个条件来看 <code>P49</code><br>结论引入证明：把结论的否定式当作一个条件来看 <code>P50</code></p><hr><h2 id="👻谓词逻辑"><a href="#👻谓词逻辑" class="headerlink" title="👻谓词逻辑"></a>👻谓词逻辑</h2><p>1.个体词： 主语、宾语之类<br>2.谓词： 描述一个个体词的属性或者多个个体词之间的关系</p><h1 id="综合复查知识点"><a href="#综合复查知识点" class="headerlink" title="综合复查知识点"></a>综合复查知识点</h1><ol><li>空集 ∈ 空集 ❌ 空集不是空集的元素；<br>空集 ⊆ 空集 ✅ 空集是空集本身的子集；</li><li>命题公式化简：每一个符号加一层次，算完 +1，为最终层次。</li><li>命题公式类型：化简 </li><li>P（A）意味着 A中元素的各种组合加上空集 （每个元素都要加括号）<code> P100 例7.2</code><br>设A＝{a,b,c}，P(A)为A的幂集，{P(A)，}是偏序集。则P(A)的子集＝{Φ，{a}，{b}，{a,b}，{b,c}}</li><li>1集合A上一条横线表示 A的补集：表示所有不属于集合A的玄素</li><li>偏序关系：设R 是集合A 上的二元关系，若R 是<code>自反的，反对称的和传递的</code>，则称R 是 A 上的偏序关系</li><li>传递（对称、自反）闭包：就是把原来的R 增加一些关系 使它拥有要求性质。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>风水杂记</title>
      <link href="/2023/03/02/%E9%A3%8E%E6%B0%B4%E6%9D%82%E8%AE%B0/"/>
      <url>/2023/03/02/%E9%A3%8E%E6%B0%B4%E6%9D%82%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="风水杂记"><a href="#风水杂记" class="headerlink" title="风水杂记"></a>风水杂记</h1><hr><p>@<a href="%E9%A3%8E%E6%B0%B4%E6%9D%82%E8%AE%B0">TOC</a></p><hr><h1 id="三元九运"><a href="#三元九运" class="headerlink" title="三元九运"></a>三元九运</h1><p><img src="https://img-blog.csdnimg.cn/ad692f25253f423596dd007ddb8b877e.png#pic_center" alt="在这里插入图片描述"><br>上中下三元、一个元三个运、一个运20年。一个元60年刚好一甲子。<br>运势当头行业、疾病等都有相关影响。例如艮土和房地产关联，所以房价一路高歌。离火与心脏、眼镜相关、虚拟、影视业、网络相关、所以在九紫运中会有影响。<br><img src="https://img-blog.csdnimg.cn/5cad9414a7904f1a9c5e7b66ce388d0b.png#pic_center" alt="在这里插入图片描述"><br>中元名存实亡、改为二元八运。<br><img src="https://img-blog.csdnimg.cn/c293fddacb4b4fe0bb01c752f0a475b9.png#pic_center" alt="在这里插入图片描述"><br>以此图方位观察任何一张地图、处于哪个时运哪个方位就取得发展等等、但并不绝对，三元九运不是规律而是趋势，</p><h1 id="元运旺衰区分"><a href="#元运旺衰区分" class="headerlink" title="元运旺衰区分"></a>元运旺衰区分</h1><p><code>元 ： 定性    运： 定量</code><br> <img src="https://img-blog.csdnimg.cn/a6382c3343264b5081c8ed09bbeaf33b.png#pic_center" alt="在这里插入图片描述"><br>当元的时候，元中的四个方位都旺、其余四个衰、当元又当运则在四个当中最旺。<br>在阳宅中，在四个旺的方位有空旷地方、门窗能收到当元旺气就可以身体健康，事业发达。相反就会事业衰弱，容易生病。<br><img src="https://img-blog.csdnimg.cn/fe08d52ebd1f4a8c89fc87695686a35d.png#pic_center" alt="在这里插入图片描述"><br>假如此时是1955年，则之后的七赤兑、八白艮、九紫离也皆为生气。同元未来运皆为生气。</p><h1 id="三元纳气操作三步骤"><a href="#三元纳气操作三步骤" class="headerlink" title="三元纳气操作三步骤"></a>三元纳气操作三步骤</h1><p><strong>1.确定太极点</strong><br>太极点也就是在阳宅中风水师下罗盘的位置。<br>一套房子是一个封闭的空间可以是一个太极、一个房间也可以、一个院子也可以。<br>房子是大太极、房间则是小太极。大小之间相互嵌套。<br>通常一个房子<code>画出对角线的中心点为太极点</code>或<code>站在房子、房间门口当作太极点</code><br>在三元纳气法中，以<code>个人通常坐卧的地方为太极点</code><br>通常以卧室的床铺、办公室的座位等等之类。<br>神位纳气很关键、意味乾卦象征一家之主，可以代替主人纳气。<br>所以神位影响全家人事业、财富，神位拿捏得准可以判断一家人的吉凶祸福。<br>太极点主要以：<code>座位、床位、神位、灶位</code><br><code>比方经常睡觉的床、罗盘要放置在人躺在床上时候，人体中轴线头到心脏之间这段位置。</code><br>灶位下罗盘是以灶台两条对角线中心。</p><p><strong>2.纳气口</strong><br>空气流动速度快：风  （毫无遮拦直接吹过来为风） 太快的气流为煞气<br>空气流动速度慢:   气  （反弹、环绕过来的为气）<br>纳气口: 可能是房子外部的低洼处、或者房子的门窗、阳台。<br>纳气口<code>太宽 ：风口</code> 不能聚气<br>纳气口<code>太窄 ：凹风</code><br>纳气口<code>刚好 ：气口</code><br><code>藏风聚气、纳气为吉、吹风为凶；迎气口、闭风口</code><br><img src="https://img-blog.csdnimg.cn/d67c592e946d4c2ca73769d65b237f41.png#pic_center" alt="在这里插入图片描述"><br>八卦卦位的角度<br><img src="https://img-blog.csdnimg.cn/ba04e62e25e14f73af2a0d5f8c58fd2e.png#pic_center" alt="在这里插入图片描述"><br>假设太极点可以移动、当一个纳气口超过45°，则至少会有两个卦气被吸收：称为 <code>杂气</code><br><code>通气 + 采光 = 纳气</code><br>如果透明窗户不开、只纳天光不纳气。<br>透过门窗能够直接看到天空、不被遮蔽、则为纳外气。相反的室内门则为纳内气。<br>外气的影响远大于内气。<br><img src="https://img-blog.csdnimg.cn/50a8f1ad14784c03a3ea8309bd863e05.png#pic_center" alt="在这里插入图片描述"></p><hr><hr><hr><hr><hr><p>引用值会和变量一样同时发生变化</p>]]></content>
      
      
      
        <tags>
            
            <tag> fengS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玄空风水</title>
      <link href="/2023/03/02/%E7%8E%84%E7%A9%BA%E9%A3%8E%E6%B0%B4/"/>
      <url>/2023/03/02/%E7%8E%84%E7%A9%BA%E9%A3%8E%E6%B0%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="玄空风水"><a href="#玄空风水" class="headerlink" title="玄空风水"></a>玄空风水</h1><hr><p>@<a href="%E7%8E%84%E7%A9%BA%E9%A3%8E%E6%B0%B4">TOC</a></p><hr><h1 id="一、风水概念"><a href="#一、风水概念" class="headerlink" title="一、风水概念"></a>一、风水概念</h1><p>高一寸为山、第一寸为水。<br>砂为山、路为水、山水未必是山峰河流。</p><h2 id="1-天干地支"><a href="#1-天干地支" class="headerlink" title="1.天干地支"></a>1.天干地支</h2><p>十天干：甲乙丙丁戊己庚辛壬癸<br>五行：甲乙木、丙丁火、戊己土、庚辛金、壬癸水<br>十二地支：子丑寅卯辰四五位申酉戌亥<br>地支五行：水土木木土火火土金金土水</p><h2 id="2-河图洛书"><a href="#2-河图洛书" class="headerlink" title="2.河图洛书"></a>2.河图洛书</h2><p>河图为体、洛书为用<br><code>河图：</code>——————🎇——————<code>：洛书(九宫)</code><br>北方1  6壬癸水 共宗 🎇 4巽 — 9离 — 2坤<br>南方2  7丙丁火 同道 🎇 3震 — 5五 — 7兑<br>东方3  8甲乙木 为朋 🎇 8艮 — 1坎 — 6乾<br>西方4  9庚辛金 为友 🎇 带九履一、左三右七<br>中方5 10戊己土 同途🎇 二四为肩、六八为足</p><h2 id="3-三元九运"><a href="#3-三元九运" class="headerlink" title="3.三元九运"></a>3.三元九运</h2><p><img src="https://img-blog.csdnimg.cn/c74e01190c854eb18d2293a63957cce4.png#pic_center" alt="在这里插入图片描述"></p><h2 id="4-先天河图数及运用（仅参考）"><a href="#4-先天河图数及运用（仅参考）" class="headerlink" title="4.先天河图数及运用（仅参考）"></a>4.先天河图数及运用（仅参考）</h2><p><strong><code>八字五行→楼层五行→楼房方位</code></strong></p><p>方位主要为后天八卦、方向卦之属性都是与楼层属性相生为好、相克为坏<br><strong>北方一六（水）：</strong><br>朝向为震、巽、坎位则为生旺之气。 有利于：学问、功名、读书好。<br>朝向为离、艮、坤位则为克杀之气。 不利于：不利男人、淫荡、漂流无依、流产、溺水。<br><strong>南方二七（火）</strong><br>朝向为艮、坤、离位则为生旺之气。 有利于：发财、利于女人、生女、读书好。<br>朝向为坎、乾、兑位则为克杀之气。 不利于：主官非、吐血、暴病、流产。<br><strong>东方三八（木）</strong><br>朝向为离、震、巽位则为生旺之气。 有利于：主男丁、读书好、旺人丁<br>朝向为坤、艮、乾、兑位则为克杀之气。 不利于：主少年夭折、自缢、出盗贼、不肖子孙<br><strong>西方四九（金）</strong><br>朝向为坎、乾、兑位则为生旺之气。 有利于：主义气、富有、发武贵<br>朝向为离、震、巽位则为克杀之气。 不利于：主不义、外伤、官非、车祸、淫荡<br><strong>中宫五十（土）</strong><br>朝向为坤、艮、乾、兑位则为生旺之气。 有利于：主富有、多房产、多人丁<br>朝向为坎、震、巽位则为克杀之气。 不利于：主传染病、炎症、堵塞不同之病、主寡</p><h2 id="5-洛书九星（地盘）"><a href="#5-洛书九星（地盘）" class="headerlink" title="5.洛书九星（地盘）"></a>5.洛书九星（地盘）</h2><p>贪狼：一、坎卦、坎宫、正北方、属水、白色一白水星：属阳 <code>文昌星</code><br>天象：月、雨水、虹、云、霜露雪、冬天<br>地象：江湖溪涧、海洋、泉井湖泊、渠沟污厕<br>人象：中男、酒鬼、江湖人物、僧人道士、盗匪淫贼、淫荡、娇柔、耳、血、肾、发、胎<br>物象：白色、<code>黑色、蓝色</code>、水阁江楼、妓院、浴房、猪、鱼、水族、阴湿虫鼠、水草、酒肉、汤、酸醋</p><p>巨门：二、坤卦、坤宫、西南方、属土、黑色二黑土星：属阴 <code>病符星</code><br>天象：阴云、雾气、冰霜、夏秋之间<br>地象：田野、乡村、平地、阴巷、林阴、暗角<br>人象：母、后母、农夫、乡人、老夫人、尼姑、教官、教师、寡妇、小人、静柔、腹、脾、胃、肉<br>物象：广平而方、<code>黄黑色</code>、村庄、田舍、牛、母牛、子牛、羊、猴、母马、五谷、木柄、平物、瓦器、甜具</p><p>禄存：三、震卦、震宫、正东方、属木、碧色三碧木星：属阳 <code>禄存星</code><br>天象：雷、春季<br>地象：高直之山、清秀碧绿、闹市<br>人象：长子、秀士、商旅、盗贼、性情劲直、足、声音、肝、头发<br>物象：高直木头、青碧色、高楼大厦、阁楼、蛇、鹭、乔木、森林、竹林、磨坊、竹木乐器、灯柱、高塔</p><p>文昌：四、巽卦、巽宫、东南方、属木、绿色四绿木星：属阴 <code>文曲星</code><br>天象：风、春夏之间<br>地象：草木茂秀之所、花果菜园、林苑<br>人象：长女、寡妇、秀士、山林仙道、工女、护士、性格缓和、文人、典狱、妾、富人、白眼、口气、眼、桃花<br>物象：楼台、山林之居、鸡、蛇、鹅、灌木、麻、茶、长物、羽毛、</p><p>廉贞：五、天心、中宫、正北方、属土、黄色五黄土星 <code>廉贞星</code><br>纯黄、寡、不利男丁、炎症、肾病、性病、癌、肿、阻塞不通之证、意外</p><p>武曲：六、乾卦、乾宫、西北方、属金、白色六白金星：属阳 <code>武曲星</code>靠技术吃饭<br>天象：纯阳、天、冰雹、雪、秋冬之间<br>地象：京都、大郡、高亢之所、用武之地<br>人象：父亲、老翁、君主、官贵、首领、大富商、将帅、性格刚健、动而不息、头、肺、骨、颈<br>物象：高堂、大厅、楼台、马、狮子、大象、犬、猪、木瓜、首饰、珠宝、玉器、水晶、钱币、刚硬之物</p><p>破军：七、兑卦、兑宫、正西方、属金、赤色七赤金星：属阴 <code>破军星</code>语言能力强<br>天象：雨水、流行、雾露、秋<br>地象：泽地、废井、山坡<br>人象：少女、主持人、奴婢、歌姬舞女、怜人、媒人、性格决绝、多口舌、膀胱、口、舌、喉、生殖器、肺<br>物象：缺口、残缺之意、羊、鱼、鸟、虎豹、糖果、糕饼、刀、斧、酒壶、乐器、鼓</p><p>左辅：八、艮卦、艮宫、东北方、属土、白色八白土星：属阳 <code>左辅星</code><br>天象：云、雾、星、冬春之间<br>地象：山城、山径、丘陵、坟墓<br>人象：少男、君子、书童、性格安静、多疑、手、指、鼻、背、肠<br>物象：矮丘、白墙、寺庙、土庐、坚硬多节之木、土豆、兵甲、布袋</p><p>右弼：九、离卦、离宫、正南方、属火、紫色九紫火星：属阴 <code>右弼星</code> 明亮光彩漂亮<br>天象：日、天火、火光、电、夏<br>地象：炉灶、灯珠、焚火<br>人象：瞎子、中女、文人、性情急躁、重虚荣、眼镜、心脏<br>物象：尖峰、龟、鳖、蚌、虫、骨头、木头、灯</p><h2 id="6-九星旺衰特征"><a href="#6-九星旺衰特征" class="headerlink" title="6.九星旺衰特征"></a>6.九星旺衰特征</h2><p>贪狼：<br>旺：聪明之子、读书好<br>衰：瞎眼、飘荡无依、溺水身亡、不利男丁、贼盗<br>巨门：<br>旺：田产致富、旺人丁、女性当权、寡妇兴家、利富贵不利学业<br>衰：腹部疾病、流产夭折、代代出寡<br>禄存：<br>旺：长子当家、白手起家、富贵双全<br>衰：不利长男、是非官非、盗贼、神经疾病<br>文昌：<br>旺：长女读书好、俊男美女、琴棋书画<br>衰：不利长女、酒色贪淫、乞丐、神经错乱<br>廉贞：<br>旺：权贵极高极富之人、掌握生杀之权<br>衰：丧丁、出寡妇、暴毙、不利男丁、动则生灾<br>武曲：<br>旺：官贵、发富<br>衰：官非不断、肺部疾病、破财、外伤<br>破军：<br>旺：武贵<br>衰：残疾、淫荡、火灾、官非、盗贼<br>左辅：<br>旺：忠臣孝子、文人秀人、富贵双全<br>衰：小儿残疾、主传染病<br>右弼：<br>旺：富贵、突然暴富、易兴易败、主读书<br>衰：火灾、吐血、官非、小产</p><h2 id="7-二十四山"><a href="#7-二十四山" class="headerlink" title="7.二十四山"></a>7.二十四山</h2><p>东方甲卯乙属木，西方庚西辛属金:<br>南方丙午丁属火，北方王子癸属水:<br>东南辰巽已属木，西北戊乾亥属金:<br>西南未坤申属土，东北丑艮寅属土。</p><p>阳：乾巽艮坤壬甲丙庚寅申已亥<br>阴：子午卯酉丁辛乙癸辰戌丑未</p><h2 id="8-飞布九星的天盘（中宫立极）"><a href="#8-飞布九星的天盘（中宫立极）" class="headerlink" title="8.飞布九星的天盘（中宫立极）"></a>8.飞布九星的天盘（中宫立极）</h2><p><strong><code>第一步：按照房屋建造时运布置天盘</code></strong><br><strong>后天八卦：</strong><br>4巽 — 9离 — 2坤<br>3震 — 5中 — 7兑<br>8艮 — 1坎 — 6乾<br>根据房屋建造年代的元运飞入中宫、飞布星盘<br>按照1.2.3.4.5.6.7.8.9.1.2.3…..顺序来重新布盘<br><strong>例</strong> ：比方是三元九运的八运2004.2-2024.2期间建造的房屋、将艮放入中宫、按顺序来重置星盘、<br>7兑 — 3震 — 5中<br>6乾 — 8艮 — 1坎<br>2坤 — 4巽 — 9离</p><p>天元龙、地元龙、人元龙、<br>排序方式：从右到左 、每一卦三山从左到天分别为：地、天、人。<br>壬为阳，则同卦子、癸为阴。此时再往左边艮卦丑山为阴、艮卦寅、艮为阳、震卦甲山为阳。<br>以此类推。。。</p><hr><p><strong><code>第二步：布置山、向盘</code></strong><br><strong>测量房屋座向</strong><br><strong>例</strong> ：子山午向:<br>此时按照第一步布置好的星盘天盘。将此时的子山<code>四</code>和午向<code>三</code>放入中宫再次布置<br>7兑 — 3震 — 5中<br>6乾 — 8艮(4山，3向) — 1坎<br>2坤 — 4巽 — 9离<br><strong><code>注意！！</code></strong><br>此时先看子山午为<code>四</code>也就是原后天八卦的<code>坎一宫</code>，<code>子为坎一宫中的天元龙</code> <strong>先确定原后天八卦的中是什么元龙</strong><br>再看原后天八卦的<code>巽四宫</code>的天元龙：为<code>巽</code>，巽是原本后天八卦中<code>巽四宫的天元龙、为阳</code> <strong>之后直接去找第一部之后重新排盘的巽四宫什么元龙是什么</strong><br>**<code>阳顺阴逆</code>**所以根据原先巽四宫中天元龙为阳、所以我们在重新布置山向盘时用顺序123456789方式排盘<br>7兑(3山，4向) — 3震(8山，8向) — 5中(1山，6向)<br>6乾(2山，5向) — 8艮(4山，3向) — 1坎(6山，1向)<br>2坤(7山，9向) — 4巽(9山，7向) — 9离(5山，2向)<br>此时当运之星<code>艮8</code>同时汇聚与原后天八卦<code>离火宫</code> 则称之为： <strong><code>双星会向</code></strong></p><hr><p><img src="https://img-blog.csdnimg.cn/13e971ab9e644a338391aa10eba00a4e.png#pic_center" alt="在这里插入图片描述"><br>如图 座山的当运之星在向上、向山的当运之星在山上。称之为**<code>上山下水</code>**<br><img src="https://img-blog.csdnimg.cn/7dbc100421e74061bc26bae5dc810043.png#pic_center" alt="在这里插入图片描述"><br>如图：双星会坐</p><h2 id="五入中宫"><a href="#五入中宫" class="headerlink" title="五入中宫"></a>五入中宫</h2><p>五入中宫如果在大运前十年、用第一步排盘完之后五的位置向山或者座山位阴阳、后十年用向座山位看阴阳。</p><hr><h1 id="二、罗盘"><a href="#二、罗盘" class="headerlink" title="二、罗盘"></a>二、罗盘</h1><p>三元盘和三合盘的区别在于 <code>有无二十四节气</code><br>玄空盘和三元盘的区别在于 <code>没有中针和缝针</code></p><h2 id="1-定向原则"><a href="#1-定向原则" class="headerlink" title="1.定向原则"></a>1.定向原则</h2><p>1.以大门座位房屋朝向、<code>门向</code>即是房屋朝向。<br>2.四合院和平房以<code>总门</code>来定向。<br>3.农村几层楼以<code>总门楼</code>定向<br>4.大面积办公楼或工厂以<code>首脑机关所在楼层立向</code><br>5.大厦以<code>总入口定向</code>、大厦以内所有单元楼都是一向<br>6.有前后二门或者偏门的以<code>门牌</code>定向<br>7.后高前低的住宅，以高出为坐，低处为向<br>8.贴近街道为向，大厦贴近那一条道路，就以拿一条道路为定向<br>9.有多个不同方向多有门的地方，以进出人数最多最频繁的门定向，或者最大主门来定向<br>10.多层不规则楼房，L、U型，以正门定向<br>11.以阳定向，取住宅受阳光最多的窗定向</p><p>人站在屋外、面对总楼门。罗盘对准大门，转动罗盘使磁针与天池红底线重叠。此时罗盘中垂直于大门的经线两端就是坐向。门的那一头是坐，人的这一头是向。</p><h2 id="2-注意事项"><a href="#2-注意事项" class="headerlink" title="2.注意事项"></a>2.注意事项</h2><p>1.不要理房屋太近<br>2.尽量选择室外定向测量<br>3.身体放松、罗盘放在胸到腰间，用眼睛目测罗盘是否与房屋一面平行，水平仪是否倾斜。<br>4.定向要数次来完成，根据不同距离反复测量<br>5.注意周围磁场对罗盘的影响</p><h2 id="3-太极点"><a href="#3-太极点" class="headerlink" title="3.太极点"></a>3.太极点</h2><p>1.房屋是简单的几何图形、可以采用几何对角线的方法求出中性点。小面积缺觉可以补齐。小面积多角可以去除<br>2.如果是一个大一个小的话、要分别求出两个房屋的对角线交点。<br>然后计算出<code>两个对角线交点的距离</code><br>再用<code>小面积 / (小面积+大面积) + 中心点连线距离 = 一个数值 </code><br>再从 <strong>大面积房屋中心点</strong> 向 <strong>小面积房屋中心点</strong> 加上这个数值。则为该房屋的太极点</p><h2 id="4-立极规划分八宫"><a href="#4-立极规划分八宫" class="headerlink" title="4.立极规划分八宫"></a>4.立极规划分八宫</h2><p>再建筑中心线上按定向时罗盘所测向首度数对准立极规度数。然后划分八宫、并注明宫位 </p><h2 id="5-替卦（兼向）"><a href="#5-替卦（兼向）" class="headerlink" title="5.替卦（兼向）"></a>5.替卦（兼向）</h2><p>24山每山 15度 9度以内为正线，起下卦。左右两边各三度都当作替卦（兼向）。</p><ol><li>同性兼向 - 天元与人元  (从元的正中到两边阴6度阳7度) 超出范围  -  空向</li><li>阴阳兼互 - 地元与天元  (5度) 超出范围  -  小空亡</li><li>出卦兼互 - 地元与天元  (5度) 超出范围  -  小空亡</li></ol><p><strong><code>骑线空缝</code></strong></p><ol><li>空向：  若兼向出现以上范围主**<code>凶事。空缝</code>**  <code>小凶</code></li><li>小空亡：夫妻亲戚不和、领导不和、毫无寸功之败局  <code>凶事空缝``中凶</code></li><li>小空亡：兄弟不和、神经错乱、官非冲突、恶疾 <code>骑线、大凶</code></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> fengS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软考中级</title>
      <link href="/2023/03/02/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2023/03/02/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="软考中级"><a href="#软考中级" class="headerlink" title="软考中级"></a>软考中级</h1><hr><p>@<a href="%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7">TOC</a></p><hr><h1 id="🏫数据结构与算法基础"><a href="#🏫数据结构与算法基础" class="headerlink" title="🏫数据结构与算法基础"></a>🏫数据结构与算法基础</h1><p><img src="https://img-blog.csdnimg.cn/d28ef3b74554487b953a4f802deb0737.png#pic_center" alt="在这里插入图片描述"></p><h2 id="1、线性表"><a href="#1、线性表" class="headerlink" title="1、线性表"></a>1、线性表</h2><p><strong>1.顺序表（顺序存储结构）</strong><br><img src="https://img-blog.csdnimg.cn/edd5857ea1dd4e64bde16ee84c1908a3.png#pic_center" alt="在这里插入图片描述"><br>顺序元素在内存中以<code>顺序存储</code>、在内存中划分的区域为连续区块<br><strong>2.链表（链式存储结构）</strong><br>在两个正方形中，前一块称之为<code>数据域</code>、后一块称之为<code>指针域</code> 它指向下一个节点地址<br><img src="https://img-blog.csdnimg.cn/e9bb8d79691c47e09315184344d131d4.png#pic_center" alt="在这里插入图片描述"><br><strong>（1）链表类别</strong><br><strong>单链表：</strong> 最后一个节点的指针域为<code>NULL</code> 表示没有后继节点<br><img src="https://img-blog.csdnimg.cn/8aea9d240e334680bea3b3aa83b33c8a.png#pic_center" alt="在这里插入图片描述"><br><strong>循环链表：</strong><br><img src="https://img-blog.csdnimg.cn/3134e5f3f9af4cc6b462a8decd373301.png#pic_center" alt="在这里插入图片描述"></p><p><strong>双链表：</strong><br><img src="https://img-blog.csdnimg.cn/4927e5fc03654913a16196b008eb435e.png#pic_center" alt="在这里插入图片描述"></p><p>链表元素为离散的、隔一段距离占有一块空间。通过<code>指针联系</code>起来</p><p><strong>3.链表的操作</strong><br>单链表删除、双链表的删除。</p><p><strong>4.顺序表与链表的比较</strong><br><img src="https://img-blog.csdnimg.cn/7cb5e53dc75c470983847a625ecc44a2.png#pic_center" alt="在这里插入图片描述"><br><strong>5.栈<code>(先进后出)</code></strong><br><strong>6.队列<code>(先进先出)</code></strong><br><strong>7.循环队列<code>(头指针为空)</code></strong></p><h2 id="2、树和二叉树"><a href="#2、树和二叉树" class="headerlink" title="2、树和二叉树"></a>2、树和二叉树</h2><h2 id="3、图"><a href="#3、图" class="headerlink" title="3、图"></a>3、图</h2><h2 id="4、排序算法"><a href="#4、排序算法" class="headerlink" title="4、排序算法"></a>4、排序算法</h2><h2 id="5、Hash"><a href="#5、Hash" class="headerlink" title="5、Hash"></a>5、Hash</h2><h2 id="6、查找算法"><a href="#6、查找算法" class="headerlink" title="6、查找算法"></a>6、查找算法</h2>]]></content>
      
      
      
        <tags>
            
            <tag> it </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA基础</title>
      <link href="/2023/03/02/Java/"/>
      <url>/2023/03/02/Java/</url>
      
        <content type="html"><![CDATA[<h1 id="JAVA基础"><a href="#JAVA基础" class="headerlink" title="JAVA基础"></a>JAVA基础</h1><hr><p>@<a href="JAVA%E5%9F%BA%E7%A1%80">TOC</a></p><hr><h2 id="一、数据类型"><a href="#一、数据类型" class="headerlink" title="一、数据类型"></a>一、数据类型</h2><p><img src="https://img-blog.csdnimg.cn/2020070222293431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjI1MDQ3,size_16,color_FFFFFF,t_70" alt="Alt"><br>空间大小(字节)：<code>byte[1] short[2] int[4] long[8] float[4] double[8]</code></p><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><p>浮点数在机器中存放形式： <code>浮点数 = 符号位 + 指数位 + 尾数位</code><br>尾数部分可能丢失，造成精度损失（小数都是近似值）<br>科学计数法输出： 5.12e2 [5.12 * 10²]</p><h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><p>char字符的本质是整数<br><code>Java使用float/double时在数据值后添加 f/lf ; Long 在数据值后添加 L ; </code><br> <strong>boolean</strong><br> Java中不能用 0 和 非0 整数来代替false和true （与C语言不同）</p><h3 id="自动类型转化"><a href="#自动类型转化" class="headerlink" title="自动类型转化"></a>自动类型转化</h3><p>Java在程序进行赋值或运算时，精度小的类型会自动转换为精度大的数据类型<br>以下是数据类型按精度（容量）大小排序规则 （自动转换路线）<br><code>char → int → long → float → double</code><br><code>byte → short → int → long → float → double</code><br><code>byte,short 和 char 任一参加运算时，都会自动转换成 int</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token string">'c'</span><span class="token punctuation">;</span> <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//都是对的✅</span><span class="token keyword">int</span> n1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token keyword">float</span> d0 <span class="token operator">=</span> n1 <span class="token operator">+</span> <span class="token number">1.1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//错误❌ ----结果是double</span><span class="token keyword">double</span> d1 <span class="token operator">=</span> n1 <span class="token operator">+</span> <span class="token number">1.1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//正确✅  ----结果是double</span><span class="token keyword">float</span> d2 <span class="token operator">=</span> n1 <span class="token operator">+</span> <span class="token number">1.1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//正确✅ ----结果是float</span></code></pre><p><code>多种类型数据混合运算时，系统会先把所有数据变成其中数据容量最大的再计算。</code></p><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><p>容量大数据类型 → 容量小数据类型 使用强制转换符（）<br>①<code>强制转换符值针对最近的操作数字有效(可以利用括号提升优先级)</code><br>②<code>从大到小强制转换会精度损失或数据溢出</code><br>③<code>char类型可以保存 正数 但不能用int类型的变量给它赋值</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token number">1.9</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 1</span><span class="token keyword">int</span> n1 <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span> <span class="token keyword">byte</span> b2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>n2<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// -48</span><span class="token comment" spellcheck="true">//以上是精度损失和数据溢出展示</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token number">10</span><span class="token operator">*</span><span class="token number">3.5</span><span class="token operator">+</span><span class="token number">6</span><span class="token operator">*</span><span class="token number">1.5</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//会变成double数据类型</span><span class="token comment" spellcheck="true">//以上是强制转换符支队最近操作数有效展示</span></code></pre><h3 id="基本数据类型和String类型的转换"><a href="#基本数据类型和String类型的转换" class="headerlink" title="基本数据类型和String类型的转换"></a>基本数据类型和String类型的转换</h3><p><code>一个 " " 双引号括起来轻松拿下 ！</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> n1 <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> String s1 <span class="token operator">=</span> n1 <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//s1即为n1的字符串形式</span><span class="token comment" spellcheck="true">//以上是基本类型转String类型</span>String s5 <span class="token operator">=</span> <span class="token string">"123"</span><span class="token punctuation">;</span><span class="token keyword">int</span> sb <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>s5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> sbb <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>s5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//以上是字符型转换成基本类型</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s5<span class="token punctuation">.</span><span class="token function">chatAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//得到s5这个字符串的第一个字符</span></code></pre><p><code>加号 + 两个字符变量会变成一个正数值 ; 加号 ＋ 两个字符串变量会把内容连在一起输出</code></p><hr><h2 id="二、运算符"><a href="#二、运算符" class="headerlink" title="二、运算符"></a>二、运算符</h2><p><strong>基本运算符</strong></p><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10.0</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2.5</span><span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 先10 / 4 = 2, 2=>2.0;</span></code></pre><p><code>% 模的本质是 a % b = a - a / b * b;</code><br><code> -10 % 3 =&gt; -10 - (-10) / 3 * 3 = 10</code><br><strong>逻辑运算符</strong><br>&amp;  ：逻辑与： 第一个条件false，第二个也要判断，效率低。<br>&amp;&amp;：短路与： 第一个条件false，结果就是false，后面条件都不看。<br>| ：   逻辑或： 不论第一个是什么，第二个都要判断。<br>||：   短路或： 第一个条件为true，结果为true。<br>！ ：取反：     true 变 false ，false 变 true  。<br>^  逻辑异或：  a ^ b, ab不相同时true,相同为false。</p><hr><p><strong>赋值运算符</strong><br>基本赋值运算符： int a = 10；<br>复合赋值运算符： +=、-=、/=、%=等等<br><code>a += b;  即   a = a + b;</code><br>第77集</p><h2 id="Dos-命令-b"><a href="#Dos-命令-b" class="headerlink" title="Dos  命令 b"></a>Dos  命令 b</h2><blockquote><p>代码如下（示例）：<br><strong>相对路径：</strong> 从当前目录开始定位，形成的一个路径<br><strong>绝对路径：</strong> 从顶级目录开始定位，形成的路径<br>1.查看目录内容：dir d:/boke/blog<br>2.进入XXX文件夹： cd d:/boke<br>3.回到上一层文件夹： cd ..<br>4.回到根目录: cd/</p></blockquote><h2 id="键盘录入"><a href="#键盘录入" class="headerlink" title="键盘录入"></a>键盘录入</h2><p><code>提示：导包：import java.util.Scanner; </code></p><pre class=" language-java"><code class="language-java">Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//sc为变量名</span><span class="token keyword">int</span> i <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//i为变量名，sc需要和上方语句对应</span><span class="token keyword">int</span> i2 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//C无法直接在运行后输入两次变量,Java可以</span></code></pre><p><code>提示：Java使用float/double时在数据值后添加 L/F</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Computer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;软件设计师&gt;备考</title>
      <link href="/2023/03/02/%E3%80%8A%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%8B%E5%A4%87%E8%80%83/"/>
      <url>/2023/03/02/%E3%80%8A%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E3%80%8B%E5%A4%87%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="lt-软件设计师-gt-备考"><a href="#lt-软件设计师-gt-备考" class="headerlink" title="<软件设计师>备考"></a>&lt;软件设计师&gt;备考</h1><hr><p>@<a href="%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88">TOC</a></p><hr><h1 id="💢第一章-计算机组成与体系结构"><a href="#💢第一章-计算机组成与体系结构" class="headerlink" title="💢第一章 计算机组成与体系结构"></a>💢第一章 计算机组成与体系结构</h1><h2 id="🐱‍👤数据表示"><a href="#🐱‍👤数据表示" class="headerlink" title="🐱‍👤数据表示"></a>🐱‍👤数据表示</h2><h3 id="1-进制转换"><a href="#1-进制转换" class="headerlink" title="1.进制转换"></a>1.进制转换</h3><p><strong>按权展开法(<code>R进制</code>转<code>10进制</code>)：</strong><br><img src="https://img-blog.csdnimg.cn/b2e809b48a9140a7a29c51ccf5ba5c22.png#pic_center" alt="在这里插入图片描述"><br><strong>短除法(<code>10进制</code>转<code>R进制</code>)：</strong> 将余数倒过来输出得到二进制<br><img src="https://img-blog.csdnimg.cn/5a9448eb78fd45ff82f9b3adb4f25b12.png#pic_center" alt="在这里插入图片描述"><br><strong><code>2进制</code>转<code>8、16进制</code>：</strong><br><img src="https://img-blog.csdnimg.cn/5122094f34b94b33b60e36c9f9aeb7ff.png#pic_center" alt="在这里插入图片描述"></p><h3 id="2-原码、反码、补码、移码"><a href="#2-原码、反码、补码、移码" class="headerlink" title="2.原码、反码、补码、移码"></a>2.原码、反码、补码、移码</h3><p><img src="https://img-blog.csdnimg.cn/924ce375a57b43a3a31c40ae0bdea202.png#pic_center" alt="在这里插入图片描述"><br>原码：第一位<code>符号位</code>、其他位置普通二进制<br>反码：正数不变，第一位<code>符号位</code>、其他位置在原码基础上 <code>1变0、0变1</code><br>移码：用来做<code>浮点运算当中的接码</code>、在补码基础上 <code>首位1变0、0变1</code></p><h3 id="3-浮点数运算"><a href="#3-浮点数运算" class="headerlink" title="3.浮点数运算"></a>3.浮点数运算</h3><p>科学计数法的两位数计算：对阶 → 尾数计算 → 结果格式化<br>N = 尾数 * 基数^指数</p><hr><h2 id="☕计算机结构"><a href="#☕计算机结构" class="headerlink" title="☕计算机结构"></a>☕计算机结构</h2><p>主机包括：CPU 和 内存</p><h3 id="1-CPU"><a href="#1-CPU" class="headerlink" title="1.CPU"></a>1.CPU</h3><p><strong>(1).运算器</strong><br>① 算术逻辑单元ALU <code>数据的算术运算和逻辑运算</code><br>② 累加寄存器AC  <code>给ALU一个工作区域 把算术结果临时存储起来</code><br>③ 数据缓冲寄存器DR <code>类存储器读写操作时暂存数据</code><br>④ 状态条件寄存器PSW <code>存储运算过程中的标志位（溢出、进位、中断、清零）</code><br><strong><code>（争议：也有将其归为控制器的）</code></strong></p><h3 id="2-控制器"><a href="#2-控制器" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>① 程序计数器PC <code>程序运行下一条指令需要了解位置，由此完成</code><br>② 指令寄存器IR  <code>储存即将执行的指令</code><br>③ 指令译码器  <code>对指令中的操作码字段进行解释</code><br>④ 时序部件 <code>提供时序控制信号</code><br>⑤地址寄存器</p><h3 id="3-Flynn-要掌握特性"><a href="#3-Flynn-要掌握特性" class="headerlink" title="3.Flynn(要掌握特性)"></a>3.Flynn<code>(要掌握特性)</code></h3><p><img src="https://img-blog.csdnimg.cn/eb84959f7ee9498f9e35cbd934f99ad8.png#pic_center" alt="在这里插入图片描述"><br>①单指令单数据流在PC已经不常见，多见于单片机领域<br>②单指令多数据流在<code>阵列处理机(适用于处理数组)</code>中常见<br>③多指令单数据流是一种<code>理论层次</code>的模型<br>④多指令多数据流典型为多处理机系统</p><p><strong>指令的基本概念：</strong><br>一条指令就是机器语言的一个语句，它是一组有意义的二进制代码：<br><strong><code>|  操作码字段  |  地址码字段 |</code></strong><br>操作码指出计算机要执行什么性质的操作如：加法、减法、取数、存数等等<br>地址码字段需要包含操作数的地址及操作结果的存放地址</p><p><strong>寻址方式</strong><br>(1)立即寻址方式<br>特点：操作数直接在指令中、<code>速度快</code>、灵活性差<br>(2)直接寻址方式<br>特点：指令中存放的是操作数的地址<br>(3)间接寻址方式<br>特点：指令中存放了一个地址、这个地址的内容是操作数的地址<br>(4)寄存器寻址方式<br>特点：寄存器存放操作数<br>(5)寄存器间接寻址方式<br>特点：寄存器内存放的是操作数的地址</p><h3 id="4-CISC与RISC-掌握区别"><a href="#4-CISC与RISC-掌握区别" class="headerlink" title="4.CISC与RISC(掌握区别 )"></a>4.CISC与RISC<code>(掌握区别 )</code></h3><p><img src="https://img-blog.csdnimg.cn/68ebce8a84b84cb8989fec3c46783e12.png#pic_center" alt="在这里插入图片描述"><br>CISC：复杂，指令数量多，频率差别大，多寻址。<br>RISC：精简，指令数量少，操作寄存器，单周期，少寻址，多通用寄存器，流水线。 </p><h3 id="5-流水线"><a href="#5-流水线" class="headerlink" title="5.流水线"></a>5.流水线</h3><p>执行一条指令步骤： <code>取指 → 分析 → 执行</code> 节约时间<br><img src="https://img-blog.csdnimg.cn/fddcf4cf420e4c9d93cb82ee826ee448.png#pic_center" alt="在这里插入图片描述"></p><h3 id="6-流水线计算"><a href="#6-流水线计算" class="headerlink" title="6.流水线计算"></a>6.流水线计算</h3><p>①流水线周期指 <code>执行时间最长的一段(指最耗时的那一个步骤)</code><br>例如： 取值、分析、执行时间分别为 2ns、2ns、1ns 则 2ns 为最长的一段<br>若执行100条指令则时间为：5 + 99 * 2 = 203ns<br>②<code>计算公式：</code><br><code>1条指令执行时间 + (指令条数 - 1)*流水线周期</code><br>理论公式：<code>(t1 + t2 + .. + tk) + (n - 1)*▲t</code><br>实践公式：<code>( k + n - 1) *▲t</code>  <strong>k表示一条指令有k个步骤</strong></p><p>超标量流水线：</p><h3 id="7-流水线吞吐率"><a href="#7-流水线吞吐率" class="headerlink" title="7.流水线吞吐率"></a>7.流水线吞吐率</h3><p>指在单位时间内流水线所完成的任务数量或输出的结果数量。<br>吞吐率公式：<code>TP = 指令条数 / 流水线执行时间</code><br>例： 100 / 203ns<br>最大吞吐率：<img src="https://img-blog.csdnimg.cn/f3486d42e8b346e487485a639c273910.png#pic_center" alt="在这里插入图片描述"></p><h3 id="8-流水线的加速比"><a href="#8-流水线的加速比" class="headerlink" title="8.流水线的加速比"></a>8.流水线的加速比</h3><p>含义：完成同一批任务，不使用流水线所用的时间与使用流水线所使用的时间之间的比成为流水线加速比。<br>公式：<code>S = 不使用流水线执行时间 / 使用流水线执行时间</code><br>加速比可以展示流水线的优势，越高越好</p><h3 id="9-流水线的效率"><a href="#9-流水线的效率" class="headerlink" title="9.流水线的效率"></a>9.流水线的效率</h3><p>含义：指流水线的设备利用率<br>公式：E = n个任务占用的时空区 / k个流水段的总的时空区 = T0 / KTk<br>其实就是将整个任务占用时空区的阴影面积大小 / 整个时空区的大小</p><h3 id="10-层次化存储结构"><a href="#10-层次化存储结构" class="headerlink" title="10.层次化存储结构"></a>10.层次化存储结构</h3><p><strong><strong><code>内存就是主存！</code></strong></strong></p><p>快   CPU        →   寄存器<br>↑<br>速   Cache(高速缓存)     →   按内存存取（通过关键词检索对应的内容）</p><p>度   内存(主存)<br>↑<br>慢   外存(辅存) → 硬盘、光盘、U盘等</p><p>往往速度快的容量小、速度慢的容量大。<br>若将所有的存储器都做成Cache或者寄存器，成本将难以接受、<br>若都用外存级别的存储器，速度又跟不上，CPU极快、但外存相对CPU慢了很多倍、<br>Cache对于CPU并不是必须的，CPU可以直接和内存进行数据交换、但是速度会慢上百倍。<br>Cache一般是以k、M兆为单位、但是内存都是以G为单位<br><code>局部性原理：执行程序过程中会频繁使用刚刚用过的结构</code></p><h3 id="11-Cache概念"><a href="#11-Cache概念" class="headerlink" title="11.Cache概念"></a>11.Cache概念</h3><p>在整个结构当中、除了寄存器，Cache的速度是最快的<br><img src="https://img-blog.csdnimg.cn/fde484a716b64cca81db821dd651e575.png#pic_center" alt="在这里插入图片描述"><br>当CPU要数据的时候，Cache里面有，就说明命中了。如果Cache没有，CPU就要到主存中去读取数据。<br><code>命中率就意味着：CPU在Cache中读取到所需要的数据的概率</code><br><strong><code>公式： Cache+主存储器的系统平均周期 = 命中率 X Cache周期时间 + 未命中率 X 主存储器周期时间</code></strong></p><h3 id="12-局部性原理"><a href="#12-局部性原理" class="headerlink" title="12.局部性原理"></a>12.局部性原理</h3><p>时间局部性：假设双重循环执行100万次、如果放进Cache就很快很方便<br>空间局部性：连续调用数组<br>工作集理论：工作集是进程运行时被频繁访问的也难免</p><h3 id="13-Cache映像"><a href="#13-Cache映像" class="headerlink" title="13.Cache映像"></a>13.Cache映像</h3><p><strong>（1）直接相联映像</strong>：硬件电路较为简单，但<code>冲突率很高</code><br><img src="https://img-blog.csdnimg.cn/e571792d29844cc39c1eb86d251f78bb.png#pic_center" alt="在这里插入图片描述"><br>每一个<code>主存区内的0页</code>都能够放进<code>Cache中的0页</code>（但不是同时）。假如<code>0区的0页放</code>置在<code>Cache0页</code>，当<code>1区0页（也就是1区16页）</code>也要放入<code>Cache0页</code>时，原先<code>0区0页</code>将被挤出。所以<code>冲突率高</code>。</p><p><strong>（2）全相联映像</strong>：电路难于设计和实现，只适用于小容量的Cache，<code>冲突率较低</code><br><img src="https://img-blog.csdnimg.cn/db214c65bd2043e3be7ba6742c60ddd7.png#pic_center" alt="在这里插入图片描述"><br>主存内地址<code>无规则随意放置</code>在Cache当中，问题在于<code>查找地址麻烦</code>，但<code>冲突率小</code>。</p><p><strong>（3）组相联映像</strong>：直接相连与全相联的<code>折中</code><br>地址映像是将主存与Cache的储存空间划分为若干大小相同的页（或成为块）<br><img src="https://img-blog.csdnimg.cn/ba134a0bfe104479aebad22800cee6c9.png#pic_center" alt="在这里插入图片描述"><br>将主存划分<code>区和组</code>在区之间使用直接相联映像，在组之间使用全相联映像。</p><h3 id="14-主存-分类"><a href="#14-主存-分类" class="headerlink" title="14.主存-分类"></a>14.主存-分类</h3><p>分为两类：<code>随机存取存储器</code>、<code>只读存储器。</code><br>随机存取存储器又分为： <strong><code>断电之后所存储的信息消失</code></strong><br>1.<code>DRAM (Dynamic RAM，动态RAM)-SDRAM</code><br>2.<code>SRAM (Static RAM，静态)</code><br>只读存储器又分为：**<code>断电之后所存储的信息还在</code>** BIOS<br>1.<code>MROM(Mask ROM，掩模式ROM)</code><br>2.<code>PROM(Programmable ROM，一次可编程 ROM)</code><br>3.<code>EPROM(Erasable PROM，可擦除的 PROM)</code><br>4.<code>闪速存储器(flash memory，闪存)</code></p><h3 id="15-主存的编址与计算"><a href="#15-主存的编址与计算" class="headerlink" title="15.主存的编址与计算"></a>15.主存的编址与计算</h3><p>存储单元有很多编址方式：<br><strong>(1).按字编址</strong>：存储体的存储单元是字存储单元，即最小寻址单位是一个字<br><strong>(2).按字节编址</strong>： <code>1 byte = 8 bit</code>  存储体的存储单元是字节存储单元，即最小寻址单位是一个字节</p><p>根据存储器所要求的容量和选定的存储芯片容量计算出所需芯片的总数：<br>    <strong><code>总数 = 总容量 / 每片的容量</code></strong><br> 使用地址区间后一位减去前一位 <code>H</code> 表示16进制 不参与运算。</p><h3 id="17-总线"><a href="#17-总线" class="headerlink" title="17.总线"></a>17.总线</h3><p>一条总线<code>同一时刻仅允许一个设备发送，但允许多个设备接收</code>。<br><strong>总线分类:</strong><br>**数据总线( Data Bus )**：在CPU和RAM之间来回传送需要处理或是需要存储的数据<br>**地址总线( Address Bus )**：用来指定在RAM之中存储的数据的地址<br>**控制总线( Control Bus )**：将微处理器控制单元的信号传送到周边设备，常见的为USB Bus和1394 Bus</p><h3 id="18-串联系统与并联系统"><a href="#18-串联系统与并联系统" class="headerlink" title="18.串联系统与并联系统"></a>18.串联系统与并联系统</h3><p><strong>串联系统：</strong><br><img src="https://img-blog.csdnimg.cn/32031a19223f42e7833c6ee6a56080e1.png#pic_center" alt="在这里插入图片描述"><br>R1.R2…Rn都表示<code>可靠性</code> 求串联系统的可靠性即为： <code>R = R1 X R2 X .... X Rn</code>  <strong>每一个可靠性的乘积</strong></p><p><strong>并联系统</strong><br><img src="https://img-blog.csdnimg.cn/aff7ec44b49c481390769252b0c9e12a.png#pic_center" alt="在这里插入图片描述"><br>R = 1 - ( 1 - R1 ) X ( 1 - R2 ) X … X ( 1 - Rn )</p><p><strong>混合型（有并联也有串联）</strong><br><img src="https://img-blog.csdnimg.cn/584d1b8924ab435c9f51803291f11935.png#pic_center" alt="在这里插入图片描述"><br>公式如图~  <strong>立方中的R为并联部分、平方中的R为串联部分</strong></p><h3 id="19-检验码-校验码基础知识"><a href="#19-检验码-校验码基础知识" class="headerlink" title="19.检验码-校验码基础知识"></a>19.检验码-校验码基础知识</h3><p><strong>码距：</strong>任何一种编码都有许多码字构成，任意两个码字之间最少变化的二进制位数就成为效验码的码距<br><strong>例如：</strong>用4位二进制表示16种状态，则有16个不同的码字，此时码距为1。如0000与0001。 只有一位数不同码距为1。 如 01 、 10 则有两位数不同 码距为2。</p><p><strong>校验码-奇偶校验</strong><br>奇偶校验码的编码方法是：由若干位有效信息(如一个字节)，再加上一个二进制位(校验位)组成校验码<br><strong>奇校验：</strong>整个校验码(有效信息位和校验位)中“1”的个数为<code>奇数</code><br><strong>偶校验：</strong>整个校验码(有效信息位和校验位)中“1”的个数为<code>偶数</code><br><strong><code>奇偶校验，可检查1位的错误，不可纠错</code></strong> <strong>意为：你知道发生了错误，但是你并不知道如何改正</strong></p><p>  <strong>比如：</strong><code>1010⬜</code>需要在后方的方框中<code>填入一个校验位</code>来组成校验码。 若加上一个<code>“1”</code>则为<code>奇校验</code><br>  但是在传输的过程中 <code>10101</code> 变为 <code>10111</code> 此时<code>“1”</code>的个数变为偶数，则为<code>偶校验</code> 说明<code>发生错误</code><br>  若传输的过程中变为 <code>11111</code> 此时变为 <code>奇校验</code> 是无法判断是否发生错误的。</p><p><strong>校验码-循环校验码CRC</strong><br><strong><code>CRC校验，可检错，不可纠错</code></strong><br><img src="https://img-blog.csdnimg.cn/5dd0f35627f6403e8f3d793fc9134ac4.png#pic_center" alt="在这里插入图片描述"><br><strong>模2除法</strong><br>模2除法指的是在做除法运算的过程中不计进位的除法。<br><img src="https://img-blog.csdnimg.cn/6872ba62e1e74d75b55b107c5a6c8904.png#pic_center" alt="在这里插入图片描述"><br>从X的四次方往1摊开 有则为1 无则为0。 当作除数使用模2除法来除。除尽之后将剩下的数字补到被除数后方。将补完之后的数字传过去，对方接受验算之后若能整除则为对。若不能则为错。**<code>同样只能验错不能修正</code>**</p><hr><h1 id="🔧第二章-操作系统"><a href="#🔧第二章-操作系统" class="headerlink" title="🔧第二章 操作系统"></a>🔧第二章 操作系统</h1><h3 id="1-进程管理-进程的概念"><a href="#1-进程管理-进程的概念" class="headerlink" title="1.进程管理 - 进程的概念"></a>1.进程管理 - 进程的概念</h3><p><strong>含义：</strong>进程是程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。它由<code>程序块、进程控制块( PCB)和数据块</code>三部分组成<br><strong>进程与程序的区别：</strong>进程是程序的一次执行过程，没有程序就没有进程，程序是完成某个特定功能的一系列程序语句的集合，只要不被破坏，它就永远存在。程序是一个静态的概念，而进程是一个动态的概念，它由创建而产生，完成任务后因撤销而消亡;进程是系统进行资源分配和调度的独立单位，而程序不是。<br><img src="https://img-blog.csdnimg.cn/4327bc6dc395464781e1564d80b5c24c.png#pic_center" alt="在这里插入图片描述"><br>进程一开始处于就绪状态，一旦CPU发生调用，则变为运行状态。之后会发生三种情况：<br>① CPU时间片用完，进程重新回到就绪状态<br>② 进来的一个进程比当前进程优先级要高，所以低优先级的要先回到就绪状态。<br>③ 进入运行状态等待某个事件（如等待用户输入等），进入等待状态之后等待事件发生，再重回就绪状态。</p><p><strong>进程的同步与互斥：</strong><br>①直接制约关系： 同步：速度有差异，在一定情况下等待另一方。<br>②间接制约关系： 互斥：千军万马过独木桥但资源有限。<br>③临界资源：一次仅允许一个进程使用的资源称为临界资源</p><p><strong>PV操作</strong><br><strong>临界区</strong>：每个进程中访问临界资源的<code>那段代码成为临界区</code><br><strong>信号量</strong>：是一种特殊的变量<br><img src="https://img-blog.csdnimg.cn/460993bf77c44cfd8b3445e5823f3b4a.png#pic_center" alt="在这里插入图片描述"><br><strong>P操作</strong>：是一个申请资源的操作，S表示临界资源的<code>资源总数</code>，每当进行p操作就会申请一个临界资源，资源数S就会 -1，此时判断S资源如果小于0，如果为真就挂起，进入阻塞队列。如果为假，就继续下面的执行。<br><strong>V操作</strong>：是一个释放资源的操作，<code>释放等于用完了之后将临界资源返还</code>。若资源数&lt;=0，说明阻塞队列里面还在等待，可以唤醒还在等待使用的程序来使用。</p><p><strong>多个进程共享一台打印机问题（互斥模型）：</strong><br>例如：理发店只有一个老板在，来了一名客人之后，老板就得为一个客人剪头发，此时再来客人就要等待。老板就等于是临时资源。<br><strong><code>单缓冲区</code>生产者、消费者问题（同步模型）：</strong><br><img src="https://img-blog.csdnimg.cn/e11a8fe658704cdebfc38cc40b5a0dcd.png#pic_center" alt="在这里插入图片描述"><br><strong>市场的个数只有 1 、 S1初值为 1、 S2初值为 0 。</strong><br>生产者生产产品、消费者消费产品、市场用来存放产品。<br><code>生产者 → 生产好一个产品p1 → (挂起) → 送到缓冲区 → (唤醒)</code><br><code>消费者 → 从缓冲区拿出产品 → (挂起) → 消费掉产品 → (唤醒)</code><br><strong><code>P可以理解为 等待 、 V可以理解为 下一步</code></strong><br><img src="https://img-blog.csdnimg.cn/542d4e53e16f48cc9f93d89b9d18d844.png#pic_center" alt="在这里插入图片描述"><br>上图称为 <strong><code>前驱图</code></strong><br>A、B、C指向D称之为<code>入度</code>。 A,B,C三个进程都影响着D。必须要ABC先做完才能到D最后到E。</p><h3 id="2-进程管理-死锁问题"><a href="#2-进程管理-死锁问题" class="headerlink" title="2.进程管理 - 死锁问题"></a>2.进程管理 - 死锁问题</h3><p><strong>含义：</strong>进程管理是操作系统的核心，如果<code>设计不当</code>，当一个进程在等待一件<code>不可能发生的事情</code>，则进程就死锁了。而一个或多个进程产生死锁，就会导致<code>系统死锁</code>。<br><strong>例如：</strong>系统有A\B\C\D\E五个进程都需要4个系统资源，系统至少有几个资源才不会发生死锁？<br><strong><code>答案 = ( (单个进程所需系统资源 - 1) * 进程个数 ) + 1</code></strong><br><img src="https://img-blog.csdnimg.cn/29ac6b299843480aa76215b45cabd745.png#pic_center" alt="在这里插入图片描述"><br> <strong><code>形成死锁的四个必要条件：</code></strong> 即上图左边： <code>互斥(争夺资源) → 保持和等待(挂起) → 不剥夺(有限资源不会释放) → 环路等待(形成一条回路)</code><br> <strong>预防死锁就必须打破四大条件！</strong><br> <strong>死锁的避免</strong>：<br> ①有序资源分配法 ：如第一点当中ABCDE有序的分配进程<br> ②银行家算法：<br> <img src="https://img-blog.csdnimg.cn/ebaa3e03f614451a99b79da158653f3e.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b31020f3a7cb44fb99895c6bfd9b1973.png#pic_center" alt="在这里插入图片描述"><br>详解：百度云盘 第二章第1集 50：00<br><strong>解答过程：</strong><br>①计算一下五个进程的已分配资源数 ： 7 7 5<br>②用可用资源减去已分配资源：2 1 0  这些事可以自由分配的资源<br>③看看五个进程中谁可以先满足，满足之后可以把已分配的资源一起拿回来：比如P2 拿回来为：4.2.1<br>之后再去满足 P4 之后便为： 5 4 1 如此排序<br>最终答案为 B</p>]]></content>
      
      
      
        <tags>
            
            <tag> Computer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EasyX隔离人员信息管理系统</title>
      <link href="/2022/11/05/EasyX%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/11/05/EasyX%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="期末游戏开发C"><a href="#期末游戏开发C" class="headerlink" title="期末游戏开发C"></a>期末游戏开发C</h1><hr><p>–<br>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><hr><h1 id="EazyX"><a href="#EazyX" class="headerlink" title="EazyX"></a>EazyX</h1><p><strong>1.安装&amp;环境配置</strong><br><a href="https://docs.easyx.cn/zh-cn/intro">https://docs.easyx.cn/zh-cn/intro</a><br><strong>2.Visual Studio 2022 安装</strong><br>2022版本将新建项目时候的空白页.cpp文件放在<code>C++</code>的桌面开发里(必要前提)</p><hr><p>**枚举类型概念:**实际上就是整数，可以定义一组固定常数</p><pre class=" language-c"><code class="language-c"><span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>down<span class="token punctuation">,</span>up<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 0 1 2 3</span><span class="token keyword">enum</span> Coloer <span class="token punctuation">{</span>red<span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">,</span>green<span class="token operator">=</span><span class="token number">24</span><span class="token punctuation">,</span>blue<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 123 24 45</span><span class="token keyword">enum</span> Data <span class="token punctuation">{</span>first<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>second<span class="token punctuation">,</span>third<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 1 2 45</span><span class="token comment" spellcheck="true">//不带值符号为前一位符号数值＋1;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>second<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2</span></code></pre><p><strong>素材网站:</strong><br><a href="https://www.aigei.com/sound/class/games_category">https://www.aigei.com/sound/class/games_category</a><br><a href="https://www.spriters-resource.com/">https://www.spriters-resource.com/</a> (延迟高)<br>在main.cpp所在目录手动创建res将素材放进去</p><h1 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h1><p>基于<code>EasyX</code>的图形库开发必须导入:<br>#include &lt;graphics.h&gt;</p><h2 id="🔳EasyX管理界面设计"><a href="#🔳EasyX管理界面设计" class="headerlink" title="🔳EasyX管理界面设计"></a>🔳EasyX管理界面设计</h2><pre><code>EasyX无非就是scratch的画笔模块，自己计算坐标，用官方的函数画图就完事儿了。</code></pre><p>问题难在如何将C和easyx写好的插件结合在一起能够互通。（虽然也只是导入cpp和.h头文件）<br>但网络上没有教程就是了。<br>   无非就是颜色 线条 图形 的结合，去吧想象中的界面分成一个个小块，然后相同的函数调用去实现。</p><h2 id="🔲初始化窗口背景界面函数："><a href="#🔲初始化窗口背景界面函数：" class="headerlink" title="🔲初始化窗口背景界面函数："></a>🔲初始化窗口背景界面函数：</h2><blockquote><p>①：initgraph():  初始化绘图窗口<br>②：IMAGE 图片名(宽, 高)：//设计图片大小<br>③：SetWorkingImage(&amp;图片名)：设置绘图目标为图片（图片名所代表图）<br>④：SetWorkingImage()：将绘图目标设置为窗口<br>⑤：putimage()<br>⑥：cleardevice()：用当前背景颜色清空绘图设备<br>⑦：putimage( X, Y, 图片名)：<br><img src="https://img-blog.csdnimg.cn/04d6baa8c7f0400fa4041cc9ee8e97bd.png#pic_center" alt="在这里插入图片描述"></p></blockquote><h2 id="🌝绘制按钮及按钮内容函数："><a href="#🌝绘制按钮及按钮内容函数：" class="headerlink" title="🌝绘制按钮及按钮内容函数："></a>🌝绘制按钮及按钮内容函数：</h2><blockquote><p>fillroundrect(left , top, right, bottom, ellipsewidth, ellipseheight);<br>圆角矩形左部 x 坐标。<br>圆角矩形顶部 y 坐标。<br>圆角矩形右部 x 坐标。<br>圆角矩形底部 y 坐标。<br>构成圆角矩形的圆角的椭圆的宽度。<br>构成圆角矩形的圆角的椭圆的高度。<br>fillrectangle(left , top, right, bottom):画一个矩形 右边是大小<br>setlinecolor()：选择用来绘画的线条颜色<br>settextstyle(20, 0, _T(“Consolas”))：字体风格<br>setfillcolor(BLUE)：设置绘制图形的颜色<br>outtextxy( X, Y, 内容)：指定坐标输出字符串<br>setbkmode()：为了避免文字底色和背景颜色冲突，可以设置成透明色<br>setbkmode(TRANSPARENT)：设置为透明</p></blockquote><h2 id="🖱关于鼠标检测问题："><a href="#🖱关于鼠标检测问题：" class="headerlink" title="🖱关于鼠标检测问题："></a>🖱关于鼠标检测问题：</h2><p>1.不知道在哪个版本EasyX中的MOUSE函数已经废弃，改成了什么牛马ExMassage<br>获取鼠标信息的方式和以往不同：<br><code>peekmessage(&amp;msg,EM_MOUSE) 如果有消息返回True，通常会使用循环while()</code><br>所以程序当中我直接判断有没有返回1，然后就跟SCRATCH一样的逻辑了。<br><img src="https://img-blog.csdnimg.cn/3cf4cd7a512c4e238254342558f15c1c.png#pic_center" alt="在这里插入图片描述"></p><pre class=" language-c"><code class="language-c"><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">peekmessage</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>m<span class="token punctuation">,</span> EX_MOUSE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//这是新版本的获取信息的方式</span></code></pre><p>2.还有个问题就是用for循环一直去检查每一个按钮是否被点击的时候，有时候出现点了没反应<br>事实上是因为还没循环到这个按钮的位置。通常电脑循环速度很快的，不过还是要看情况。<br>这个情况在scratch当中也是如此。反正我还没学过更好的办法。</p>]]></content>
      
      
      
        <tags>
            
            <tag> EasyX C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CET.4 复习核心</title>
      <link href="/2022/11/02/CET.4/"/>
      <url>/2022/11/02/CET.4/</url>
      
        <content type="html"><![CDATA[<h1 id="CET-4-复习核心"><a href="#CET-4-复习核心" class="headerlink" title="CET.4 复习核心"></a>CET.4 复习核心</h1><hr><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><hr><h1 id="每日同义替换"><a href="#每日同义替换" class="headerlink" title="每日同义替换"></a>每日同义替换</h1><p>新的：Novel - new - fresh - most recent<br>奇怪；陌生的：Strange - odd - unusual - uncommon - Unfamiliar<br>机会：Odds - chance - opportunity<br>传统的：Convention - tradition<br>鼓励；动机；刺激：Motivation - incentive - stimuli - Encouragement<br>完整的；所有的：<br>Whole - all - entire - complete - total - thorough<br>仅仅：Merely - just<br>唯一的：Solely - only - ultimate<br>大约；大概：Approximately - about<br>完全一样：Identical - same<br>成就：Achievement - accomplishment<br>公司：coportation<br>复杂的：Complicated - sophisticated - complex<br>威胁到：Threaten - endanger<br>强调：Stress - emphasize<br>影响：impact - influence - affect<br>财政：finance - fund<br>贸易的：Commerce - commercial</p><h1 id="写作（30min，15-）"><a href="#写作（30min，15-）" class="headerlink" title="写作（30min，15%）"></a>写作（30min，15%）</h1><p>==因果== （因为）:because, in that, as, since + 句子<br>because of = owing to = thanks to + n./V.ing= <code>due to(由于)</code><br>==结果== （所以）:so = hence = therefore = thereby<br>consequently = in consequence = <code>As a result(放在句首开头)</code><br>==对比== （同时）:at the same time = likewise =<br>similarly = equally = in the meanwhile = <code>simultaneously(同时)</code><br>==差异== （相反）:but, by contrast = conversely<br>on hte contrary = while = otherwise = <code>on the other hand(另一方面)</code><br>==递进== （此外）:besides = also = in addition =<br>moreover =furthermore = apart/<code>aside from(除此之外)</code><br>==让步== （尽管）:<code>In spite of + n./V.ing(尽管)</code><br><code>there is no doubt that... (毫无疑问的是....)</code><br>==引出新对象==  :<code>in terms of(就...而论)</code><br>==总结== :<code>come to the conclusin(总的来说)</code></p><h2 id="🔴总分总三段论"><a href="#🔴总分总三段论" class="headerlink" title="🔴总分总三段论"></a>🔴总分总三段论</h2><h3 id="议论文"><a href="#议论文" class="headerlink" title="议论文"></a>议论文</h3><p>第①段：评价标题/名言<br>第②段:   举2个例子(无中生友)＋观点认可<br>第③段：总结个人观点</p><h3 id="图表类"><a href="#图表类" class="headerlink" title="图表类"></a>图表类</h3><p><strong><code>百分之99的图画类都是讽刺和批评</code></strong><br>第①段：简要描述(图画主旨＋细节描述)<br><strong><code>相关人 + 相关物 + 相关动作 + 环境 + 文字 （五个选用）</code></strong><br>第②段:   观点认可 ＋ 举例 + 措施<br>第③段：总结</p><h3 id="选择解释类"><a href="#选择解释类" class="headerlink" title="选择解释类"></a>选择解释类</h3><p>第①段：问问题 + 表明立场<br>第②段:   原因<br>第③段：总结</p><h2 id="🔵高级词汇替换"><a href="#🔵高级词汇替换" class="headerlink" title="🔵高级词汇替换"></a>🔵高级词汇替换</h2><blockquote><p>contemporary  =  modem<br>significance =  important<br>youngsters =  young people<br>get =   gain<br>but = however<br>frequently = uauslly<br>think = I am convinced that(我坚信) = I deem<br>utmost = best<br>drawing = picture(图片)<br>critical significance of = importance (重中之重)<br>dream to = want to/intend to(尝试)/aim to(目标)</p></blockquote><h2 id="🔺短语搭配"><a href="#🔺短语搭配" class="headerlink" title="🔺短语搭配"></a>🔺短语搭配</h2><blockquote><p>In the contemporary world 在现代世界<br>It is of <code>n.</code> for sb to do  对某人某事很重要<br>a majority of 绝大多数<br>a host of 许多<br>a variety of 各种各样<br>For instance 举例子<br>a large number of 各种各样<br>find it <code>adj.</code> for sb to sth 发现某人做某事很怎么样<br>fail to do 未能做某事<br>Then 然后<br>get a good command 学好<br>practice make perfect 熟能生巧<br>indispensable for sb to do sth </p></blockquote><h2 id="🔻万能句"><a href="#🔻万能句" class="headerlink" title="🔻万能句"></a>🔻万能句</h2><blockquote><p>This <code>drawing</code>, apparently, can be naturally associated whit + 标题<br>drawing 换成 chart(图表) saying,quote(名言) phenomenon(现象)<br>并列句换成伴随语<br>A student sits in a chair and listens to<br>换成 A student sits in a chair , listening to </p></blockquote><hr><h1 id="听力（30min，35-）"><a href="#听力（30min，35-）" class="headerlink" title="听力（30min，35%）"></a>听力（30min，35%）</h1><h2 id="🔻关键词"><a href="#🔻关键词" class="headerlink" title="🔻关键词"></a>🔻关键词</h2><p><strong><code>如何画关键词：</code></strong><br>1.<strong>纵向审题</strong>：排除相同概念，相同词汇。<br>2.<strong>横向划词</strong>：划（形＋名/名＋名/动＋名）<br><strong><code>否定表示切记要画出来！！！</code></strong></p><h2 id="🔼视听一致原则"><a href="#🔼视听一致原则" class="headerlink" title="🔼视听一致原则"></a>🔼视听一致原则</h2><p>1.某一个选项<strong>关键信息</strong>与音频内容完全相符<br>2.某一选项<strong>关键信息</strong>在音频中出现次数最多</p><h2 id="👿同义转换"><a href="#👿同义转换" class="headerlink" title="👿同义转换"></a>👿同义转换</h2><p>1.同根词: excited - excitement / sad - sadness / agr ee - agreement<br>2.同义替换: big - large - massive / change - alter - shift<br>3.短语/概念替换: pull down - knock down<br>4.宽泛到具体: food - tomatoes</p><h2 id="🕵正确及错误选项特点"><a href="#🕵正确及错误选项特点" class="headerlink" title="🕵正确及错误选项特点"></a>🕵正确及错误选项特点</h2><p>正确选项：<br>1.选项与音频内容一致（试听一致或同转后一致）<br>2.选项符合问题描述（*非必要）<br>3.往往通过逻辑引导答案<br>错误选项：<br>1.直接被否定<br>2.反义表述<br>3.部分信息未提及<br>4.选项杂糅</p><hr><h1 id="阅读（40min，35-）"><a href="#阅读（40min，35-）" class="headerlink" title="阅读（40min，35%）"></a>阅读（40min，35%）</h1><h2 id="🔶仔细阅读（20min）"><a href="#🔶仔细阅读（20min）" class="headerlink" title="🔶仔细阅读（20min）"></a>🔶仔细阅读（20min）</h2><p><strong>1. 正确答案 = 感情色彩 + 同义替换<br>2. 细节题要逐步精确定位<br>3. 正确答案的每个部分都闪烁着同义替换的光芒<br>4. 优先拿定位句主干（主语）对比选项<br>5. 三句解题 - 本句 + 上下句，别多看！</strong></p><p>一些技巧：<br>1.This开头句子指代上句话内容<br>2.带“ ”引号名句引用段落看段首<br>3.实在找不到选关键词最多选项<br>4.并列词and 意味两边含义差不多<br>5.转折词But等 都是关键</p><p>==转折词汇==：but, yet, by, cotrast, on the contrary,<br>unfortunately, although/though, even though,<br>even if, in spite of, despite, nevertheless, while, whereas<br><strong><code>while放句首表示虽然，放句中表示对比</code></strong><br>时间对比（转折）： over the past decades,<br>a century ago, now, today, nowday, currently,</p><p>==因果关系：== because, since, in that, due to, as a result,<br>thanks to, on account of, so, hence,result in, lead to, give rise to</p><h2 id="🔷长篇阅读（10min）"><a href="#🔷长篇阅读（10min）" class="headerlink" title="🔷长篇阅读（10min）"></a>🔷长篇阅读（10min）</h2><p><strong>核心方法： 定位词扫读，看到大于看懂！</strong><br>1.先画出10道题核心词汇<br><strong><code>大写字母（专有名词），数字（基数词/序数词/时间），符号</code><br><code>对比，趋势：比较级/最高级（more/most;increase/drop）</code></strong><br>2.重点关注题目观点与目的<br>表目的：to do, in order to do<br>表否定：not/not, never, little, hardly,( in- , un-…)<br>3.比照原文优先每段首尾句</p><hr><h1 id="翻译（30min，15-）"><a href="#翻译（30min，15-）" class="headerlink" title="翻译（30min，15%）"></a>翻译（30min，15%）</h1><p><strong><code>先把他说的那些专业词换成中文里简单的句子，然后翻译</code></strong><br><strong>不犯严重语法错误</strong><br>时态语态错误，主谓不一致，没有谓语，从句错误，doing/done使用错误<br><strong><code>少写动词，不写从句。一句话一动词。非必要只用一般现在，一般过去，一般将来时。</code><br><code>尽量依靠介词表达修饰成分，或者 to do + 不定式 和 动词 + to do。 </code></strong><br><strong>1.审题（1min）</strong><br><strong><code>速读，标记发生在“过去”，“已经”，“未来”，“将要”的句子。</code><br><code>未标记的句子一律用一般现在时。</code></strong><br><strong>2.翻译（12min）</strong><br>① 明确句子主谓宾，确定其他部分的逻辑关系<br>② 弱化，简化句中生词，第二动词，次要修饰信息<br>③ 确认主语单复数，整句时态，进行翻译</p><h2 id="🎡主题分类"><a href="#🎡主题分类" class="headerlink" title="🎡主题分类"></a>🎡主题分类</h2><p><strong>1.历史文化类</strong><br>古镇：乌镇，潍坊；名胜：泰山，洞庭湖；文明：明朝，宋朝<br>① 什么名字，什么时段，多久or在哪，多大<br>②有哪些名人，故事，特产，特点<br>③ 如何受到人们的喜爱欢迎 or 人们如何高度评价它<br><strong><code>①对过去时使用的相对较多，务必在审题时重点关注</code><br><code>②专有名词较多，注意每个首字母大写和单复数问题</code><br><code>③省，市，县，朝代，民族等不常用的称呼可以适当省略</code></strong><br>Hunan Province → Hunan      the Chu Dynasty → the Chu<br><strong>2.社会发展类</strong><br>① 某事物过去不普遍，不流行；现在流行了<br>② 流行带来了哪些问题，政府如何应对<br>③ 带来了哪些好处 </p><h2 id="💥必备核心词汇"><a href="#💥必备核心词汇" class="headerlink" title="💥必备核心词汇"></a>💥必备核心词汇</h2><p><strong>1.动词词组：</strong><br>help sb to do sth 帮某人做某事/有助于某人更好的做某事<br>help people to know the world<br>encourage sb to do sth 鼓励某人做某事/促进某人做某事<br>encourage people to read more books<br>choose to do sth 选择做某事<br>choose to eat 甜豆腐脑<br>make sb/sth adj 是某人某事变得…<br>make it easy<br>make our life convenient<br>become adj 变得…<br>the problem becomes serious<br><strong>2.必备表达</strong><br>located in XX : 主句（位于…）<br>the birthplace of sth : 某事的发源地<br>sth start from somewhere<br>A is famous because… = A is famous for sth<br>Chinese culture 中国文化, Chinese history 中国历史<br>relevant problems : 相关问题</p>]]></content>
      
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
